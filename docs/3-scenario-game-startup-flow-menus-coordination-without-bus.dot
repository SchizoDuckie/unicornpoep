digraph GameStartup_Direct {
    rankdir=TD;
    sep="0.6";
    overlap=false;
    concentrate=true;
    bgcolor="transparent";
    fontname="Arial";
    node [shape=box, style="rounded,filled", fontcolor="#eeeeee", color="#eeeeee", fontname="Arial"];
    edge [fontcolor="#eeeeee", color="#eeeeee", fontname="Arial"];
    graph [label="Game Startup (Menu Choices) Flow (Direct Event View)", labelloc=t, fontsize=16, fontcolor="#eeeeee"];

    // Node Styles (Dark fill, specific border remains)
    MainMenuComponent [shape="record", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                       label="{ MainMenu UI | {<emits_sp> Emits: UI.MainMenu.StartSinglePlayerClicked} | {<emits_pr> Emits: UI.MainMenu.StartPracticeClicked} | {<emits_mp> Emits: UI.MainMenu.JoinMultiplayerClicked} | {<emits_hs> Emits: UI.MainMenu.HighscoresClicked} | {<emits_cq> Emits: UI.MainMenu.CustomQuestionsClicked} | {<emits_about> Emits: UI.MainMenu.AboutClicked} }"];
    MultiplayerChoiceComponent [shape="record", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                                label="{ MP Choice UI | {<emits_host> Emits: UI.MultiplayerChoice.HostClicked} | {<emits_join> Emits: UI.MultiplayerChoice.JoinClicked} | {<emits_back> Emits: UI.MultiplayerChoice.BackClicked} }"];
    HostLobbyComponent [shape="record", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                        label="{ Host Lobby UI | {<emits_start> Emits: UI.HostLobby.StartGameClicked} | {<emits_cancel> Emits: UI.HostLobby.CancelClicked} | {<emits_copy> Emits: UI.HostLobby.CopyLinkClicked} }"];
    JoinLobbyComponent [shape="record", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                        label="{ Join Lobby UI | {<emits_submit> Emits: UI.JoinLobby.SubmitCodeClicked} | {<emits_confirm> Emits: UI.JoinLobby.ConfirmClicked} | {<emits_cancel> Emits: UI.JoinLobby.CancelClicked} }"];
    NamePromptDialog [shape="record", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                      label="{ Name Prompt Dialog | {<emits_name> Emits: UI.NameSubmitted} }"];
    GameCoordinator [shape="record", fillcolor="#343a40", color="#e6e0f8", penwidth=2,
                     label="{ GameCoordinator | {<handles_ui> Handles: UI Events} | {<emits_nav> Emits: System.Navigate} }"]; // Handles the grouped UI Event
    UIManager [shape="record", fillcolor="#343a40", color="#e6e0f8", penwidth=2,
               label="{ UIManager | {<handles_nav> Handles: System.Navigate} }"];
    WebRTCManager [label="WebRTCManager", fillcolor="#343a40", color="#ffc107", penwidth=2];
    QuestionsManager [label="QuestionsManager", fillcolor="#343a40", color="#ffc107", penwidth=2];
    GameModes [label="Game Modes", fillcolor="#343a40", color="#20c997", penwidth=2, shape=ellipse];

    // 1. User Actions -> Game Coordinator (Direct Event Flows)
    MainMenuComponent:emits_sp -> GameCoordinator:handles_ui [label=" UI.MainMenu.StartSinglePlayerClicked"];
    MainMenuComponent:emits_pr -> GameCoordinator:handles_ui [label=" UI.MainMenu.StartPracticeClicked"];
    MainMenuComponent:emits_mp -> GameCoordinator:handles_ui [label=" UI.MainMenu.JoinMultiplayerClicked"];
    MainMenuComponent:emits_hs -> GameCoordinator:handles_ui [label=" UI.MainMenu.HighscoresClicked"];
    MainMenuComponent:emits_cq -> GameCoordinator:handles_ui [label=" UI.MainMenu.CustomQuestionsClicked"];
    MainMenuComponent:emits_about -> GameCoordinator:handles_ui [label=" UI.MainMenu.AboutClicked"];
    MultiplayerChoiceComponent:emits_host -> GameCoordinator:handles_ui [label=" UI.MultiplayerChoice.HostClicked"];
    MultiplayerChoiceComponent:emits_join -> GameCoordinator:handles_ui [label=" UI.MultiplayerChoice.JoinClicked"];
    MultiplayerChoiceComponent:emits_back -> GameCoordinator:handles_ui [label=" UI.MultiplayerChoice.BackClicked"];
    NamePromptDialog:emits_name -> GameCoordinator:handles_ui [label=" UI.NameSubmitted"];
    HostLobbyComponent:emits_start -> GameCoordinator:handles_ui [label=" UI.HostLobby.StartGameClicked"];
    HostLobbyComponent:emits_cancel -> GameCoordinator:handles_ui [label=" UI.HostLobby.CancelClicked"];
    HostLobbyComponent:emits_copy -> GameCoordinator:handles_ui [label=" UI.HostLobby.CopyLinkClicked"];
    JoinLobbyComponent:emits_submit -> GameCoordinator:handles_ui [label=" UI.JoinLobby.SubmitCodeClicked"];
    JoinLobbyComponent:emits_confirm -> GameCoordinator:handles_ui [label=" UI.JoinLobby.ConfirmClicked"];
    JoinLobbyComponent:emits_cancel -> GameCoordinator:handles_ui [label=" UI.JoinLobby.CancelClicked"];

    // 2. Game Coordinator Actions (Direct Calls)
    GameCoordinator -> WebRTCManager [label=" Calls init/connect", style=dashed];
    GameCoordinator -> QuestionsManager [label=" Calls getQuestionsForSheets() / ...", style=dashed];
    GameCoordinator -> GameModes [label=" Instantiates", style=dashed];

    // 3. Game Coordinator triggers navigation -> UIManager (Direct Event Flow)
    GameCoordinator:emits_nav -> UIManager:handles_nav [label=" System.Navigate"];

    // 4. UIManager would then call show() on relevant components (Not explicitly shown for brevity, but implied)
    // Example: UIManager -> HostLobbyComponent [label=" Calls show()", style=dashed]; // Depending on the specific Navigation Event
} 