digraph GameEndFlow_Direct {
    rankdir=TD;
    sep="0.6";
    overlap=false;
    bgcolor="transparent";
    fontname="Arial";
    node [shape=box, style="rounded,filled", fontcolor="#eeeeee", color="#eeeeee", fontname="Arial"];
    edge [fontcolor="#eeeeee", color="#eeeeee", fontname="Arial"];
    graph [label="Game End & Highscore Flow (Direct Event View)", labelloc=t, fontsize=16, fontcolor="#eeeeee"];

    // Node Styles (Record for specific event interactions)
    BaseGameMode [shape="record", style="rounded,filled", fillcolor="#343a40", color="#20c997", penwidth=2,
                  label="{ Game Mode (Any) | {<emits_fin> Emits: Game.Finished} }"];
    GameEndDialog [shape="record", style="rounded,filled", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                   label="{ Game End Dialog UI | {<handles_fin> Handles: Game.Finished} | {<emits_menu> Emits: UI.GameEndDialog.ReturnToMenuClicked} | {<emits_play> Emits: UI.GameEndDialog.PlayAgainClicked} }"];
    HighscoresComponent [shape="record", style="rounded,filled", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                         label="{ Highscores UI | {<handles_loaded> Handles: Highscores.Loaded} | {<handles_failed> Handles: Highscores.Failed} }"]; // Specific handles
    MainMenuComponent [shape="record", style="rounded,filled", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                       label="{ MainMenu UI | {<emits_hs> Emits: UI.MainMenu.HighscoresClicked} }"];
    GameCoordinator [shape="record", style="rounded,filled", fillcolor="#343a40", color="#e6e0f8", penwidth=2,
                     label="{ GameCoordinator | {<handles_fin> Handles: Game.Finished} | {<handles_play> Handles: UI.GameEndDialog.PlayAgainClicked} }"];
    UnicornPoep [shape="record", style="rounded,filled", fillcolor="#343a40", color="#e6e0f8", penwidth=2,
                 label="{ App Entry Point | {<handles_menu> Handles: UI.GameEndDialog.ReturnToMenuClicked} | {<handles_hs> Handles: UI.MainMenu.HighscoresClicked} | {<emits_nav> Emits: System.Navigate} }"];
    HighscoreManager [shape="record", style="rounded,filled", fillcolor="#343a40", color="#ffc107", penwidth=2,
                      label="{ HighscoreManager | {<emits_feedback> Emits: System.ShowFeedback} | {<emits_loaded> Emits: Highscores.Loaded} | {<emits_failed> Emits: Highscores.Failed} }"]; // Specific emits
    UIManager [shape="record", style="rounded,filled", fillcolor="#343a40", color="#e6e0f8", penwidth=2,
               label="{ UIManager | {<handles_nav> Handles: System.Navigate} }"];
    ToastComponent [shape="record", style="rounded,filled", fillcolor="#343a40", color="#0dcaf0", penwidth=2,
                    label="{ Toast UI | {<handles_feedback> Handles: System.ShowFeedback} }"];

    // 1. Game Mode finishes -> Coordinator & UI (Direct Event Flows)
    BaseGameMode:emits_fin -> GameCoordinator:handles_fin [label=" Game.Finished (Trigger Save)"];
    BaseGameMode:emits_fin -> GameEndDialog:handles_fin [label=" Game.Finished (Show Dialog)"];

    // 2. Coordinator saves score (Direct Call + Event)
    GameCoordinator -> HighscoreManager [label=" Calls addHighscore()", style=dashed];
    HighscoreManager:emits_feedback -> ToastComponent:handles_feedback [label=" System.ShowFeedback (Save Success/Fail)"]; // Direct feedback

    // 3. User action from End Dialog -> App/Coordinator (Direct Event Flows)
    GameEndDialog:emits_menu -> UnicornPoep:handles_menu [label=" UI.GameEndDialog.ReturnToMenuClicked"];
    GameEndDialog:emits_play -> GameCoordinator:handles_play [label=" UI.GameEndDialog.PlayAgainClicked (Restarts)"];

    // 4. User requests highscores (Event + Direct Call + Event)
    MainMenuComponent:emits_hs -> UnicornPoep:handles_hs [label=" UI.MainMenu.HighscoresClicked (Trigger Load)"]; // Direct UI event
    UnicornPoep -> HighscoreManager [label=" Calls loadScores()", style=dashed]; // Direct Call
    UnicornPoep:emits_nav -> UIManager:handles_nav [label=" System.Navigate (to Highscores)"]; // Direct Nav Event

    // 5. Highscore Manager loads data -> UI (Direct Event Flows)
    HighscoreManager:emits_loaded -> HighscoresComponent:handles_loaded [label=" Highscores.Loaded"];
    HighscoreManager:emits_failed -> HighscoresComponent:handles_failed [label=" Highscores.Failed"];

    // 6. UIManager shows Highscore UI (Direct Call - after nav handled)
    UIManager -> HighscoresComponent [label=" Calls show()", style=dashed];
} 